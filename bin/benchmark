#!/usr/bin/env php
<?php

use CsvBenchmarks\CsvBench;
use CsvBenchmarks\Driver;
use League\CLImate\CLImate;

$base_dir = dirname(__DIR__);

require $base_dir.'/vendor/autoload.php';

$path      = $base_dir.'/output/result.csv';
$terminal  = new CLImate();
$drivers   = new Driver\DriverCollection($base_dir.'/composer.lock');
$drivers->add(new Driver\NativeFunctions());
$drivers->add(new Driver\NativeSplFileObject());
$drivers->add(new Driver\Spout());
$drivers->add(new Driver\EasyCsv());
$drivers->add(new Driver\Goodby());
$drivers->add(new Driver\Keboola());
$drivers->add(new Driver\League());

//DON'T EDIT BELOW!!

$summary = <<<EOF
<green>CSV Benchmark</green>
    Test writing and reading capabilities from different PHP CSV packages. With out of the box settings when applicable

<yellow>Packages tested:</yellow>

EOF;

foreach ($drivers->getPackageList() as $name => $data) {
    $summary .= "       - <green>$name</green> (<yellow>v{$data['version']}</yellow>) (<cyan>{$data['homepage']}</cyan>)".PHP_EOL;
}

$options = <<<EOF
<yellow>Options:</yellow>
    <green>--help</green>         Display this help message
    <green>--rows</green>         Numbers of rows to create
    <green>--cells</green>        Numbers of cells per row to create (default: <yellow>3</yellow>)
    <green>--path</green>         Path to the file to read from OR to write to (default: <yellow>$path</yellow>)
    <green>--iteration</green>    Numbers of iteration for each test (default: <yellow>3</yellow>)
EOF;

$args = getopt('', ["rows::", "cells::", "path::", "iteration::", "help", ]);
if (! $args || isset($args['help'])) {
    $terminal->output($summary.$options);
    die(0);
} elseif (! isset($args['rows'])) {
    $terminal->error("The number of row the write is missing");
    $terminal->output('');
    $terminal->output($summary.$options);
    die(52);
}

if (isset($args['path'])) {
    $path = trim($args['path']);
}

$iteration = 3;
if (isset($args['iteration'])) {
    $iteration = $args['iteration'];
}

$nbcells = 3;
if (isset($args['cells'])) {
    $nbcells = $args['cells'];
}

$benchmark = new CsvBench($drivers, $terminal);
$benchmark->setPath($path);
$benchmark->setRowCount($args['rows']);
$benchmark->setCellCount($nbcells);
$benchmark->setIterationCount($iteration);
$benchmark();
die(0);
