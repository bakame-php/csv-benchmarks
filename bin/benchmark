#!/usr/bin/env php
<?php

use CsvBenchmarks\CsvBench;
use CsvBenchmarks\Driver;

define("BASE_DIR", dirname(__DIR__));

require BASE_DIR.'/vendor/autoload.php';

$outputfile = BASE_DIR.'/output/result.csv';
$terminal   = new League\CLImate\CLImate();
$drivers    = new Driver\DriverCollection(BASE_DIR.'/composer.lock');
$drivers->add(new Driver\NativeFunctions());
$drivers->add(new Driver\NativeSplFileObject());
$drivers->add(new Driver\Spout());
$drivers->add(new Driver\EasyCsv());
$drivers->add(new Driver\Goodby());
$drivers->add(new Driver\Keboola());
$drivers->add(new Driver\League());

$summary = <<<EOF
<green>CSV Benchmark</green>
    Test writing and reading capabilities from different PHP CSV packages. With out of the box settings when applicable

<yellow>Packages tested:</yellow>

EOF;

foreach ($drivers->getPackageList() as $name => $data) {
    $summary .= "       - <green>$name</green> <cyan>v{$data['version']}</cyan> ({$data['homepage']})".PHP_EOL;
}

$options = <<<EOF
<yellow>Options:</yellow>
    <green>--help</green>    Display this help message
    <green>--rows</green>    Numbers of rows to create (default: <yellow>200000</yellow> rows. Each row contains 3 cells)
    <green>--file</green>    File to read from OR to write to (default: <yellow>$outputfile</yellow>)
EOF;

$args = getopt('', ["rows::", "file::", "help"]);
if (isset($args['help'])) {
    $terminal->output($summary.$options);
    die(0);
} elseif (! isset($args['rows'])) {
    $terminal->error("The number of row the write and read is missing");
    $terminal->output('');
    $terminal->output($summary.$options);
    die(52);
}

$outputfile = dirname(__DIR__).'/output/result.csv';
if (isset($args['file'])) {
    $outputfile = trim($args['file']);
}

$benchmark = new CsvBench($drivers, $terminal);
$benchmark->setOutputFile($outputfile);
$benchmark->setNbWritingRows($args['rows']);
$benchmark();
die(0);
